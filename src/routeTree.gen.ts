/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SolutionsImport } from './routes/solutions'
import { Route as ResourcesImport } from './routes/resources'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutUsImport } from './routes/about-us'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as SolutionsTechnologyServicesImport } from './routes/solutions.technology-services'
import { Route as SolutionsProjectManagementImport } from './routes/solutions.project-management'
import { Route as SolutionsDataProtectionImport } from './routes/solutions.data-protection'
import { Route as ResourcesEducationalTechnologyTrainingImport } from './routes/resources.educational-technology-training'
import { Route as ResourcesCdpoTrainingImport } from './routes/resources.cdpo-training'
import { Route as ResourcesBlogImport } from './routes/resources.blog'

// Create/Update Routes

const SolutionsRoute = SolutionsImport.update({
  path: '/solutions',
  getParentRoute: () => rootRoute,
} as any)

const ResourcesRoute = ResourcesImport.update({
  path: '/resources',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutUsRoute = AboutUsImport.update({
  path: '/about-us',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SolutionsTechnologyServicesRoute =
  SolutionsTechnologyServicesImport.update({
    path: '/technology-services',
    getParentRoute: () => SolutionsRoute,
  } as any)

const SolutionsProjectManagementRoute = SolutionsProjectManagementImport.update(
  {
    path: '/project-management',
    getParentRoute: () => SolutionsRoute,
  } as any,
)

const SolutionsDataProtectionRoute = SolutionsDataProtectionImport.update({
  path: '/data-protection',
  getParentRoute: () => SolutionsRoute,
} as any)

const ResourcesEducationalTechnologyTrainingRoute =
  ResourcesEducationalTechnologyTrainingImport.update({
    path: '/educational-technology-training',
    getParentRoute: () => ResourcesRoute,
  } as any)

const ResourcesCdpoTrainingRoute = ResourcesCdpoTrainingImport.update({
  path: '/cdpo-training',
  getParentRoute: () => ResourcesRoute,
} as any)

const ResourcesBlogRoute = ResourcesBlogImport.update({
  path: '/blog',
  getParentRoute: () => ResourcesRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/about-us': {
      id: '/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof AboutUsImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/resources': {
      id: '/resources'
      path: '/resources'
      fullPath: '/resources'
      preLoaderRoute: typeof ResourcesImport
      parentRoute: typeof rootRoute
    }
    '/solutions': {
      id: '/solutions'
      path: '/solutions'
      fullPath: '/solutions'
      preLoaderRoute: typeof SolutionsImport
      parentRoute: typeof rootRoute
    }
    '/resources/blog': {
      id: '/resources/blog'
      path: '/blog'
      fullPath: '/resources/blog'
      preLoaderRoute: typeof ResourcesBlogImport
      parentRoute: typeof ResourcesImport
    }
    '/resources/cdpo-training': {
      id: '/resources/cdpo-training'
      path: '/cdpo-training'
      fullPath: '/resources/cdpo-training'
      preLoaderRoute: typeof ResourcesCdpoTrainingImport
      parentRoute: typeof ResourcesImport
    }
    '/resources/educational-technology-training': {
      id: '/resources/educational-technology-training'
      path: '/educational-technology-training'
      fullPath: '/resources/educational-technology-training'
      preLoaderRoute: typeof ResourcesEducationalTechnologyTrainingImport
      parentRoute: typeof ResourcesImport
    }
    '/solutions/data-protection': {
      id: '/solutions/data-protection'
      path: '/data-protection'
      fullPath: '/solutions/data-protection'
      preLoaderRoute: typeof SolutionsDataProtectionImport
      parentRoute: typeof SolutionsImport
    }
    '/solutions/project-management': {
      id: '/solutions/project-management'
      path: '/project-management'
      fullPath: '/solutions/project-management'
      preLoaderRoute: typeof SolutionsProjectManagementImport
      parentRoute: typeof SolutionsImport
    }
    '/solutions/technology-services': {
      id: '/solutions/technology-services'
      path: '/technology-services'
      fullPath: '/solutions/technology-services'
      preLoaderRoute: typeof SolutionsTechnologyServicesImport
      parentRoute: typeof SolutionsImport
    }
  }
}

// Create and export the route tree

interface ResourcesRouteChildren {
  ResourcesBlogRoute: typeof ResourcesBlogRoute
  ResourcesCdpoTrainingRoute: typeof ResourcesCdpoTrainingRoute
  ResourcesEducationalTechnologyTrainingRoute: typeof ResourcesEducationalTechnologyTrainingRoute
}

const ResourcesRouteChildren: ResourcesRouteChildren = {
  ResourcesBlogRoute: ResourcesBlogRoute,
  ResourcesCdpoTrainingRoute: ResourcesCdpoTrainingRoute,
  ResourcesEducationalTechnologyTrainingRoute:
    ResourcesEducationalTechnologyTrainingRoute,
}

const ResourcesRouteWithChildren = ResourcesRoute._addFileChildren(
  ResourcesRouteChildren,
)

interface SolutionsRouteChildren {
  SolutionsDataProtectionRoute: typeof SolutionsDataProtectionRoute
  SolutionsProjectManagementRoute: typeof SolutionsProjectManagementRoute
  SolutionsTechnologyServicesRoute: typeof SolutionsTechnologyServicesRoute
}

const SolutionsRouteChildren: SolutionsRouteChildren = {
  SolutionsDataProtectionRoute: SolutionsDataProtectionRoute,
  SolutionsProjectManagementRoute: SolutionsProjectManagementRoute,
  SolutionsTechnologyServicesRoute: SolutionsTechnologyServicesRoute,
}

const SolutionsRouteWithChildren = SolutionsRoute._addFileChildren(
  SolutionsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/about-us': typeof AboutUsRoute
  '/contact': typeof ContactRoute
  '/resources': typeof ResourcesRouteWithChildren
  '/solutions': typeof SolutionsRouteWithChildren
  '/resources/blog': typeof ResourcesBlogRoute
  '/resources/cdpo-training': typeof ResourcesCdpoTrainingRoute
  '/resources/educational-technology-training': typeof ResourcesEducationalTechnologyTrainingRoute
  '/solutions/data-protection': typeof SolutionsDataProtectionRoute
  '/solutions/project-management': typeof SolutionsProjectManagementRoute
  '/solutions/technology-services': typeof SolutionsTechnologyServicesRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/about-us': typeof AboutUsRoute
  '/contact': typeof ContactRoute
  '/resources': typeof ResourcesRouteWithChildren
  '/solutions': typeof SolutionsRouteWithChildren
  '/resources/blog': typeof ResourcesBlogRoute
  '/resources/cdpo-training': typeof ResourcesCdpoTrainingRoute
  '/resources/educational-technology-training': typeof ResourcesEducationalTechnologyTrainingRoute
  '/solutions/data-protection': typeof SolutionsDataProtectionRoute
  '/solutions/project-management': typeof SolutionsProjectManagementRoute
  '/solutions/technology-services': typeof SolutionsTechnologyServicesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/about-us': typeof AboutUsRoute
  '/contact': typeof ContactRoute
  '/resources': typeof ResourcesRouteWithChildren
  '/solutions': typeof SolutionsRouteWithChildren
  '/resources/blog': typeof ResourcesBlogRoute
  '/resources/cdpo-training': typeof ResourcesCdpoTrainingRoute
  '/resources/educational-technology-training': typeof ResourcesEducationalTechnologyTrainingRoute
  '/solutions/data-protection': typeof SolutionsDataProtectionRoute
  '/solutions/project-management': typeof SolutionsProjectManagementRoute
  '/solutions/technology-services': typeof SolutionsTechnologyServicesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/about-us'
    | '/contact'
    | '/resources'
    | '/solutions'
    | '/resources/blog'
    | '/resources/cdpo-training'
    | '/resources/educational-technology-training'
    | '/solutions/data-protection'
    | '/solutions/project-management'
    | '/solutions/technology-services'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/about-us'
    | '/contact'
    | '/resources'
    | '/solutions'
    | '/resources/blog'
    | '/resources/cdpo-training'
    | '/resources/educational-technology-training'
    | '/solutions/data-protection'
    | '/solutions/project-management'
    | '/solutions/technology-services'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/about-us'
    | '/contact'
    | '/resources'
    | '/solutions'
    | '/resources/blog'
    | '/resources/cdpo-training'
    | '/resources/educational-technology-training'
    | '/solutions/data-protection'
    | '/solutions/project-management'
    | '/solutions/technology-services'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AboutUsRoute: typeof AboutUsRoute
  ContactRoute: typeof ContactRoute
  ResourcesRoute: typeof ResourcesRouteWithChildren
  SolutionsRoute: typeof SolutionsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AboutUsRoute: AboutUsRoute,
  ContactRoute: ContactRoute,
  ResourcesRoute: ResourcesRouteWithChildren,
  SolutionsRoute: SolutionsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/about-us",
        "/contact",
        "/resources",
        "/solutions"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/about-us": {
      "filePath": "about-us.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/resources": {
      "filePath": "resources.tsx",
      "children": [
        "/resources/blog",
        "/resources/cdpo-training",
        "/resources/educational-technology-training"
      ]
    },
    "/solutions": {
      "filePath": "solutions.tsx",
      "children": [
        "/solutions/data-protection",
        "/solutions/project-management",
        "/solutions/technology-services"
      ]
    },
    "/resources/blog": {
      "filePath": "resources.blog.tsx",
      "parent": "/resources"
    },
    "/resources/cdpo-training": {
      "filePath": "resources.cdpo-training.tsx",
      "parent": "/resources"
    },
    "/resources/educational-technology-training": {
      "filePath": "resources.educational-technology-training.tsx",
      "parent": "/resources"
    },
    "/solutions/data-protection": {
      "filePath": "solutions.data-protection.tsx",
      "parent": "/solutions"
    },
    "/solutions/project-management": {
      "filePath": "solutions.project-management.tsx",
      "parent": "/solutions"
    },
    "/solutions/technology-services": {
      "filePath": "solutions.technology-services.tsx",
      "parent": "/solutions"
    }
  }
}
ROUTE_MANIFEST_END */
